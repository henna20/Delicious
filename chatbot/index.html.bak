<!DOCTYPE html>
<html lang="en">
<head>
	<title>convForm - example</title>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1">
	<link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
	<link rel="stylesheet" type="text/css" href="dist/jquery.convform.css">
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
	<link rel="stylesheet" type="text/css" href="demo.css">
</head>
<body>
	<section id="demo">
	    <div class="vertical-align">
	        <div class="container">
	            <div class="row">
	                <div class="col-sm-6 col-sm-offset-3 col-xs-offset-0">
	                    <div class="card no-border">
	                        <div id="chat" class="conv-form-wrapper">
	                            <form id="chatbot_form" action="" method="GET" class="hidden">
									<input type="text" name="name" data-conv-question="Hello This is Bot How may I help you?">
	                                <!-- <select data-conv-question="hey! how may Help you" name="first-question">
	                                    <option value="yes">Yes</option>
	                                    <option value="sure">Sure!</option>
	                                </select> -->
	                                <input type="text" name="name" data-conv-question="Alright! First, tell me your full name, please.|Okay! Please, tell me your name first.">
	                                <input type="text" data-conv-question="Howdy, {name}:0! It's a pleasure to meet you." data-no-answer="true">
	                                <!-- <input type="text" data-conv-question="This plugin supports multi-select too. Let's see an example." data-no-answer="true"> -->
	                                <select name="order" data-conv-question="Please select order Type" >
	                                    <option value="Take Away">Take Away</option>
	                                    <option value="Home Delivery">Home Delivery</option>
	                                    <option value="Dine-in">Dine-in</option>
	                                    <!-- <option value="Classic">Classic</option> -->
	                                </select>
	                                <!-- <select name="programmer" data-callback="storeState" data-conv-question="">
	                                    <option value="yes">Yes</option>
	                                    <option value="no">No</option>
	                                </select> -->
									<input type="text" name="timing" data-conv-question="Yes sure our opening and closing time is 9am - 9pm,">
									<input type="text" name="guest" data-conv-question="may i ask number of guests please.">
									<input type="text" name="booking_time" data-conv-question="okay, {guest} guests and your booking time please." >
									<input type="text" name="duration" data-conv-question="and durations in hours?" >
									<input type="text" name="event" data-conv-question="your purpose of event?">

									<select name="order" data-conv-question="Reservation is complete please select the menue"  >
	                                    <option value="Inhouse Menu">Inhouse Menu</option>
	                                    <option value="Take-out Menu">Take-out Menu</option>
	                                </select>

	                                <!-- <div data-conv-fork="programmer">
	                                    <div data-conv-case="yes">
	                                        <input type="text" data-conv-question="A fellow programmer! Cool." data-no-answer="true">
	                                    </div>
	                                    <div data-conv-case="no">
		                                    <select name="thought" data-conv-question="Have you ever thought about learning? Programming is fun!">
		                                    	<option value="yes">Yes</option>
		                                    	<option value="no">No..</option>
		                                    </select>
	                                    </div>
	                                </div> -->
									
									 
	                                <!-- <input type="text" data-conv-question="convForm also supports regex patterns. Look:" data-no-answer="true"> -->
	                                <input data-conv-question="Type in your e-mail" data-pattern="^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$" id="email" type="email" name="email" required placeholder="What's your e-mail?" >
									
	                                <input data-conv-question="You will receive notification on your email regardings of bookings." type="text">
									 <select name="programmer" data-callback="storeState" data-conv-question="Are you cancel the reservation?">
	                                    <option value="yes">Yes</option>
	                                    <option value="no">No</option>
	                                </select>
									 <div data-conv-fork="programmer">
	                                    <div data-conv-case="yes">
	                                     <input data-conv-question="Your Reservation has been cancelled!" type="text">
									
	                                    </div>
	                                    <div data-conv-case="no">
		                                    <input data-conv-question="Thanks for reaching us." type="text">
	                                    </div>
	                                </div>
									
									
									
							
									
									
									
									
									<!-- <select data-conv-question="Selects also support callback functions. For example, try one of these:">
											<option value="google" data-callback="google">Google</option>
											<option value="bing" data-callback="bing">Bing</option>
									</select>
	                                <select name="callbackTest" data-conv-question="You can do some cool things with callback functions. Want to rollback to the 'programmer' question before?">
	                                    <option value="yes" data-callback="rollback">Yes</option>
	                                    <option value="no" data-callback="restore">No</option>
	                                </select>
	                                <select data-conv-question="This is it! If you like me, consider donating! If you need support, contact me. When the form gets to the end, the plugin submits it normally, like you had filled it." id="">
	                                    <option value="">Awesome!</option>
	                                </select> -->
	                            </form>
	                        </div>
	                    </div>
	                </div>
	            </div>
	        </div>
	    </div>
	</section>
	<script type="text/javascript" src="jquery-1.12.3.min.js"></script>
	<script type="text/javascript" src="dist/autosize.min.js"></script>
	<script type="text/javascript" src="dist/jquery.convform.js"></script>

	<script>

		// $(document).ready(function(){
		// 	$('#email').val();
		// });
		// function google(stateWrapper, ready) {
		// 	window.open("https://google.com");
		// 	ready();
		// }
		// function bing(stateWrapper, ready) {
		// 	window.open("https://bing.com");
		// 	ready();
		// }
		// var rollbackTo = false;
		// var originalState = false;
		// function storeState(stateWrapper, ready) {
		// 	rollbackTo = stateWrapper.current;
		// 	console.log("storeState called: ",rollbackTo);
		// 	ready();
		// }
		// function rollback(stateWrapper, ready) {
		// 	console.log("rollback called: ", rollbackTo, originalState);
		// 	console.log("answers at the time of user input: ", stateWrapper.answers);
		// 	if(rollbackTo!=false) {
		// 		if(originalState==false) {
		// 			originalState = stateWrapper.current.next;
		// 				console.log('stored original state');
		// 		}
		// 		stateWrapper.current.next = rollbackTo;
		// 		console.log('changed current.next to rollbackTo');
		// 	}
		// 	ready();
		// }
		// function restore(stateWrapper, ready) {
		// 	if(originalState != false) {
		// 		stateWrapper.current.next = originalState;
		// 		console.log('changed current.next to originalState');
		// 	}
		// 	ready();
		// }
	</script>
	<script>
		jQuery(function($){
			convForm = $('#chat').convform({selectInputStyle: 'disable'});
			console.log(convForm);
		});
	</script>
</body>
</html>